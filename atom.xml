<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Think Different</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kimisme.com/"/>
  <updated>2017-10-14T13:51:33.130Z</updated>
  <id>http://kimisme.com/</id>
  
  <author>
    <name>Kimisme</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>工具篇-StarUML</title>
    <link href="http://kimisme.com/2017/10/14/tool-staruml/"/>
    <id>http://kimisme.com/2017/10/14/tool-staruml/</id>
    <published>2017-10-14T12:32:58.000Z</published>
    <updated>2017-10-14T13:51:33.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>StarUML使用</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>下载。<a href="http://staruml.io/" target="_blank" rel="external">http://staruml.io/</a></li></ol><h2 id="OOP的主要特征"><a href="#OOP的主要特征" class="headerlink" title="OOP的主要特征"></a>OOP的主要特征</h2><ul><li>抽象(abstract)</li><li>封装(encapsulation)</li><li>继承(inheritance)</li><li>多态(polymorphism)</li><li>关联(association)</li><li>聚合(aggregation)</li><li>组合(composition)</li><li>内聚与耦合(cohesion &amp; coupling)</li></ul><h3 id="抽象"><a href="#抽象" class="headerlink" title="抽象"></a>抽象</h3><ul><li>忽略掉一个对象或实体的细节而只关注其本质特征的过程（将系统的细枝末节部分去掉，只关注最核心的东西）</li><li>简化功能与格式</li><li>帮助用户与对象交互</li></ul><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><ul><li>隐藏数据和实现</li><li>提供公共方法供用户调用功能</li><li>对象的两种视图<ul><li>外部视图：对象你能做的工作（方法的调用）</li><li>内部视图：对象如何完成工作（方法的具体实现）</li></ul></li></ul><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><ul><li>通过存在的类型定义新类型的机制</li><li>通常在两个类型之间存在<strong>is a</strong>或<strong>kind of</strong>这样的关系（苹果 ia a 水果）</li><li>通过继承可实现代码的重用，另外继承也是多台的基础</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;StarUML使用&lt;/p&gt;
    
    </summary>
    
      <category term="Tool" scheme="http://kimisme.com/categories/Tool/"/>
    
    
  </entry>
  
  <entry>
    <title>C#框架-Excel操作框架NPOI</title>
    <link href="http://kimisme.com/2017/10/14/dotnet-framework-npoi/"/>
    <id>http://kimisme.com/2017/10/14/dotnet-framework-npoi/</id>
    <published>2017-10-14T08:43:09.000Z</published>
    <updated>2017-10-14T08:52:07.400Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用NPOI读写Excel</p><a id="more"></a><h2 id="Excel组成"><a href="#Excel组成" class="headerlink" title="Excel组成"></a>Excel组成</h2><ol><li><p>一个Excel包含多个工作表（Sheet）</p></li><li><p>一个工作表（Sheet）包含多行（Row）</p></li><li><p>一行（Row）包含多个单元格（Cell）</p></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>下载。<a href="http://npoi.codeplex.com/" target="_blank" rel="external">http://npoi.codeplex.com/</a></li><li>找到对应版本</li><li>引入程序集<ol><li><code>NPOI.OpenXmlFormats.dll</code></li><li><code>NPOI.OpenXml4Net.dll</code></li><li><code>NPOI.OOXML.dll</code></li><li><code>NPOI.dll</code></li><li><code>ICSharpCode.SharpZipLib.dll</code></li></ol></li></ol><h2 id="读取Excel文件"><a href="#读取Excel文件" class="headerlink" title="读取Excel文件"></a>读取Excel文件</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ReadExcel</span>(<span class="params"> </span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="comment">//1.将Excel读到文件流中</span></div><div class="line">    <span class="keyword">using</span> (FileStream fsRead=File.OpenRead(<span class="string">"Student.xls"</span>))</div><div class="line">    &#123;</div><div class="line">        <span class="comment">//2.根据文件流，创建一个工作簿对象（workbook）</span></div><div class="line">        IWorkbook wk=<span class="keyword">new</span> HSSFWorkbook(fsRead);</div><div class="line">        <span class="comment">//3.读取工作簿中的工作表</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; wk.NumberOfSheets; i++)</div><div class="line">        &#123;</div><div class="line">            <span class="comment">//3.1根据索引，获取一个工作表</span></div><div class="line">            ISheet sheet = wk.GetSheetAt(i);</div><div class="line">            <span class="comment">//3.2输出工作表的名称</span></div><div class="line">            Console.WriteLine(<span class="string">"=====&#123;0&#125;====="</span>,sheet.SheetName);</div><div class="line">            <span class="comment">//4.遍历工作表每一行的数据</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> r= <span class="number">0</span>; r &lt;=sheet.LastRowNum; r++)</div><div class="line">            &#123;</div><div class="line">                <span class="comment">//获取当前行</span></div><div class="line">                IRow row = sheet.GetRow(r);</div><div class="line">                <span class="comment">//5.遍历一行中的每一个单元格，当这一行为空时，row会返回null</span></div><div class="line">                <span class="keyword">if</span> (row!=<span class="literal">null</span>)</div><div class="line">                &#123;</div><div class="line">                    <span class="comment">//遍历一行的每一个单元格</span></div><div class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> c = <span class="number">0</span>; c &lt; row.LastCellNum; c++)</div><div class="line">                    &#123;</div><div class="line">                        <span class="comment">//创建单元格对象</span></div><div class="line">                        ICell cell = row.GetCell(c);</div><div class="line">                        <span class="comment">//如果单元格未使用，则为null</span></div><div class="line">                        <span class="keyword">if</span> (cell!=<span class="literal">null</span>)</div><div class="line">                        &#123;</div><div class="line">                            Console.Write(cell.ToString()+<span class="string">"\t"</span>);</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                Console.WriteLine();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="写入Excel"><a href="#写入Excel" class="headerlink" title="写入Excel"></a>写入Excel</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">WriteExcel</span>(<span class="params"> </span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    List&lt;Person&gt;listPersons=<span class="keyword">new</span> List&lt;Person&gt;()</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">new</span> Person()&#123;Name=<span class="string">"张三 1"</span>,Age=<span class="number">11</span>,Gender=<span class="string">'男'</span>&#125;,</div><div class="line">        <span class="keyword">new</span> Person()&#123;Name=<span class="string">"张三 2"</span>,Age=<span class="number">21</span>,Gender=<span class="string">'女'</span>&#125;,</div><div class="line">        <span class="keyword">new</span> Person()&#123;Name=<span class="string">"张三 3"</span>,Age=<span class="number">31</span>,Gender=<span class="string">'男'</span>&#125;,</div><div class="line">        <span class="keyword">new</span> Person()&#123;Name=<span class="string">"张三 4"</span>,Age=<span class="number">41</span>,Gender=<span class="string">'女'</span>&#125;</div><div class="line">    &#125;;</div><div class="line">    <span class="comment">//1.创建Workbook对象</span></div><div class="line">    IWorkbook wk=<span class="keyword">new</span> HSSFWorkbook();</div><div class="line">    <span class="comment">//2.创建工作表对象 </span></div><div class="line">    ISheet sheet = wk.CreateSheet(<span class="string">"Persons"</span>);</div><div class="line">    <span class="comment">//3.向工作表中添加行</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= listPersons.Count<span class="number">-1</span>; i++)</div><div class="line">    &#123;</div><div class="line">        IRow row = sheet.CreateRow(i);</div><div class="line">        row.CreateCell(<span class="number">0</span>).SetCellValue(listPersons[i].Name);</div><div class="line">        row.CreateCell(<span class="number">1</span>).SetCellValue(listPersons[i].Age);</div><div class="line">        row.CreateCell(<span class="number">2</span>).SetCellValue(listPersons[i].Gender.ToString());</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">using</span> (FileStream writer=File.OpenWrite(<span class="string">"Persons.xls"</span>))</div><div class="line">    &#123;</div><div class="line">        wk.Write(writer);</div><div class="line">    &#125;</div><div class="line">    Console.WriteLine(<span class="string">"ok"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;使用NPOI读写Excel&lt;/p&gt;
    
    </summary>
    
      <category term="DotNet" scheme="http://kimisme.com/categories/DotNet/"/>
    
    
  </entry>
  
  <entry>
    <title>C#框架-日志框架log4net</title>
    <link href="http://kimisme.com/2017/10/14/dotnet-framework-log4net/"/>
    <id>http://kimisme.com/2017/10/14/dotnet-framework-log4net/</id>
    <published>2017-10-14T08:25:33.000Z</published>
    <updated>2017-10-14T08:44:47.241Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Log4Net使用</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>下载。<a href="http://logging.apache.org/log4net/" target="_blank" rel="external">http://logging.apache.org/log4net/</a></li><li>引入。<ol><li><code>log4.net.dll</code></li></ol></li></ol><h2 id="LogHelper-cs"><a href="#LogHelper-cs" class="headerlink" title="LogHelper.cs"></a>LogHelper.cs</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> log4net日志专用</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> ILog log = LogManager.GetLogger(<span class="keyword">typeof</span>(LogHelper));</div><div class="line"></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 普通的文件记录日志</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="info"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteLog</span>(<span class="params"><span class="keyword">string</span> info</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">if</span> (log.IsInfoEnabled)</div><div class="line">        &#123;</div><div class="line">            log.Info(info);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 错误日志</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="info"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="ex"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteLog</span>(<span class="params"><span class="keyword">string</span> info, Exception ex</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">if</span> (log.IsErrorEnabled)</div><div class="line">        &#123;</div><div class="line">            log.Error(info, ex);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="修改AssemblyInfo-cs"><a href="#修改AssemblyInfo-cs" class="headerlink" title="修改AssemblyInfo.cs"></a>修改AssemblyInfo.cs</h2><p><strong>在最下面添加以下行</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="meta">assembly :log4net.Config.XmlConfigurator(Watch = true)</span>]</div></pre></td></tr></table></figure><h2 id="App-config"><a href="#App-config" class="headerlink" title="App.config"></a>App.config</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">configSections</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">name</span>=<span class="string">"log4net"</span> <span class="attr">type</span>=<span class="string">"System.Configuration.IgnoreSectionHandler"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">configSections</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">log4net</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">root</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">"ALL"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"UserLogAppender"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"SystemLogAppender"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--信息日志--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"UserLogAppender"</span> <span class="attr">type</span>=<span class="string">"log4net.Appender.RollingFileAppender,log4net"</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!--日志路径--&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">file</span> <span class="attr">value</span>=<span class="string">"./Log/"</span>/&gt;</span></div><div class="line">      <span class="comment">&lt;!--日志名格式：20151113_user.log--&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"DatePattern"</span> <span class="attr">value</span>=<span class="string">"yyyyMMdd&amp;quot;_user.log&amp;quot;"</span>/&gt;</span></div><div class="line">      <span class="comment">&lt;!--是否是向文件中追加日志--&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"AppendToFile"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">      <span class="comment">&lt;!--log保留天数--&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"MaxSizeRollBackups"</span> <span class="attr">value</span>=<span class="string">"10"</span>/&gt;</span></div><div class="line">      <span class="comment">&lt;!--log最大文件大小--&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"MaximumFileSize"</span> <span class="attr">value</span>=<span class="string">"5MB"</span>/&gt;</span></div><div class="line">      <span class="comment">&lt;!--日志文件名是否固定不变的--&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"StaticLogFileName"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">      <span class="comment">&lt;!--日志根据XX滚动--&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"RollingStyle"</span> <span class="attr">value</span>=<span class="string">"Composite"</span>/&gt;</span></div><div class="line">      <span class="comment">&lt;!--布局--&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">layout</span> <span class="attr">type</span>=<span class="string">"log4net.Layout.PatternLayout,log4net"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"ConversionPattern"</span> <span class="attr">value</span>=<span class="string">"%d [%t] %-5p %c [%x] - %m%n"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"Header"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">type</span>=<span class="string">"log4net.Filter.LevelRangeFilter"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMin"</span> <span class="attr">value</span>=<span class="string">"INFO"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMax"</span> <span class="attr">value</span>=<span class="string">"INFO"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--警告,注意,通知,错误日志--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"SystemLogAppender"</span> <span class="attr">type</span>=<span class="string">"log4net.Appender.RollingFileAppender,log4net"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">file</span> <span class="attr">value</span>=<span class="string">"./Log/"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"File"</span> <span class="attr">value</span>=<span class="string">"Log\log_sys.log"</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"DatePattern"</span> <span class="attr">value</span>=<span class="string">"yyyyMMdd&amp;quot;_sys.log&amp;quot;"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"AppendToFile"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"RollingStyle"</span> <span class="attr">value</span>=<span class="string">"Composite"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"MaxSizeRollBackups"</span> <span class="attr">value</span>=<span class="string">"10"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"MaximumFileSize"</span> <span class="attr">value</span>=<span class="string">"5MB"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"StaticLogFileName"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">layout</span> <span class="attr">type</span>=<span class="string">"log4net.Layout.PatternLayout,log4net"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"ConversionPattern"</span> <span class="attr">value</span>=<span class="string">"%d&#123;yyyy-MM-dd HH:mm:ss&#125;%newline%message%n"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"Header"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">type</span>=<span class="string">"log4net.Filter.LevelRangeFilter"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMin"</span> <span class="attr">value</span>=<span class="string">"ERROR"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMax"</span> <span class="attr">value</span>=<span class="string">"ErrOR"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">log4net</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="Program-cs"><a href="#Program-cs" class="headerlink" title="Program.cs"></a>Program.cs</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    ILog log = LogManager.GetLogger(<span class="keyword">typeof</span>(LogHelper));</div><div class="line">    log.Info(<span class="string">"info"</span>);</div><div class="line">    log.Error(<span class="string">"error"</span>);</div><div class="line"></div><div class="line">    Console.ReadKey();</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><p><a href="http://www.cnblogs.com/jiajinyi/p/5884930.html" target="_blank" rel="external">http://www.cnblogs.com/jiajinyi/p/5884930.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Log4Net使用&lt;/p&gt;
    
    </summary>
    
      <category term="DotNet" scheme="http://kimisme.com/categories/DotNet/"/>
    
    
  </entry>
  
  <entry>
    <title>C#框架-作业调度框架Quartz.Net</title>
    <link href="http://kimisme.com/2017/10/14/dotnet-framework-quartz-net/"/>
    <id>http://kimisme.com/2017/10/14/dotnet-framework-quartz-net/</id>
    <published>2017-10-14T08:15:56.000Z</published>
    <updated>2017-10-14T08:22:58.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Quartz.Net使用例子</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>下载。<a href="https://sourceforge.net/projects/quartznet/files/quartznet/" target="_blank" rel="external">https://sourceforge.net/projects/quartznet/files/quartznet/</a></li><li>找到动态库<ol><li>Common.Logging.Core.dll</li><li>Common.Logging.dll</li><li>Quartz.dll</li></ol></li><li>引入到项目</li></ol><h2 id="一直执行"><a href="#一直执行" class="headerlink" title="一直执行"></a>一直执行</h2><p><strong>JobDemo.cs</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JobDemo</span> : <span class="title">IJob</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 这里是作业调度每次定时执行的方法</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="context"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Execute</span>(<span class="params">IJobExecutionContext context</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        Console.WriteLine(DateTime.Now.ToString(<span class="string">"r"</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>Program.cs</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">        下面代码执行结果是，</span></div><div class="line"><span class="comment">        每三秒执行一次JobDemo中的Execute，如果程序不停止，无休无止执行</span></div><div class="line"><span class="comment">    */</span></div><div class="line"></div><div class="line">    <span class="comment">//1.0创建一个作业调度池</span></div><div class="line">    ISchedulerFactory factory = <span class="keyword">new</span> StdSchedulerFactory();</div><div class="line">    IScheduler _scheduler = factory.GetScheduler();</div><div class="line">    <span class="comment">//2.0创建出一个具体的作业</span></div><div class="line">    IJobDetail job = JobBuilder.Create&lt;JobDemo&gt;().Build();</div><div class="line">    <span class="comment">//3.0创建并配置一个触发器</span></div><div class="line">    ISimpleTrigger trigger =</div><div class="line">        (ISimpleTrigger)</div><div class="line">            TriggerBuilder.Create()</div><div class="line">                .WithSimpleSchedule(x =&gt; x.WithIntervalInSeconds(<span class="number">3</span>).WithRepeatCount(<span class="keyword">int</span>.MaxValue))</div><div class="line">                .Build();</div><div class="line">    <span class="comment">//4.0加入作业调度池中</span></div><div class="line">    _scheduler.ScheduleJob(job, trigger);</div><div class="line">    <span class="comment">//5.0开始运行</span></div><div class="line">    _scheduler.Start();</div><div class="line">    Console.ReadKey();</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="定时执行"><a href="#定时执行" class="headerlink" title="定时执行"></a>定时执行</h2><blockquote><p>在每小时的第10，20，25，26，33，54分钟，每分钟的第1，10，14秒执行一次。那么上面显然是不能满足的。这是我就把cron-like表达式引入进来，以实现各种时间纬度的调用</p></blockquote><p><strong>Program.cs</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="comment">//1.首先创建一个作业调度池</span></div><div class="line">    ISchedulerFactory factory = <span class="keyword">new</span> StdSchedulerFactory();</div><div class="line">    IScheduler _scheduler = factory.GetScheduler();</div><div class="line">    <span class="comment">//2.创建出一个具体的作业</span></div><div class="line">    IJobDetail job = JobBuilder.Create&lt;JobDemo&gt;().Build();</div><div class="line">    <span class="comment">//NextGivenSecondDate：如果第一个参数为null则表示当前时间往后推迟2秒的时间点</span></div><div class="line">    DateTimeOffset startTime = DateBuilder.NextGivenSecondDate(DateTime.Now.AddSeconds(<span class="number">1</span>), <span class="number">2</span>);</div><div class="line">    DateTimeOffset endTime = DateBuilder.NextGivenSecondDate(DateTime.Now.AddYears(<span class="number">2</span>), <span class="number">3</span>);</div><div class="line">    <span class="comment">//3.创建并配置一个触发器</span></div><div class="line">    ICronTrigger trigger =</div><div class="line">        (ICronTrigger)</div><div class="line">            TriggerBuilder.Create()</div><div class="line">                .StartAt(startTime)</div><div class="line">                .EndAt(endTime)</div><div class="line">                .WithCronSchedule(<span class="string">"1,10,14 10,20,25,26,33,54 * * * ?"</span>).Build();</div><div class="line">    <span class="comment">//4.加入作业调度池</span></div><div class="line">    _scheduler.ScheduleJob(job, trigger);</div><div class="line">    <span class="comment">//5.开始执行</span></div><div class="line">    _scheduler.Start();</div><div class="line">    <span class="comment">//挂起2天</span></div><div class="line">    Thread.Sleep(TimeSpan.FromDays(<span class="number">2</span>));</div><div class="line">    <span class="comment">//2天后关闭作业调度，讲不在执行</span></div><div class="line">    _scheduler.Shutdown();</div><div class="line">    Console.ReadKey();</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Quartz.Net使用例子&lt;/p&gt;
    
    </summary>
    
      <category term="DotNet" scheme="http://kimisme.com/categories/DotNet/"/>
    
    
  </entry>
  
  <entry>
    <title>C#框架-测试框架NUnit</title>
    <link href="http://kimisme.com/2017/10/14/dotnet-framework-nunit/"/>
    <id>http://kimisme.com/2017/10/14/dotnet-framework-nunit/</id>
    <published>2017-10-14T07:35:11.000Z</published>
    <updated>2017-10-14T08:16:43.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>NUnit入门</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>下载，官网地址:<a href="http://nunit.org/" target="_blank" rel="external">http://nunit.org/</a></li><li>找到对应版本</li><li>引入程序集（<code>nunit.framework.dll</code>）</li></ol><h2 id="HelloController-cs"><a href="#HelloController-cs" class="headerlink" title="HelloController.cs"></a>HelloController.cs</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HelloController</span></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">Hello</span>(<span class="params"></span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"Hello NUnit"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="HelloControllerTest-cs"><a href="#HelloControllerTest-cs" class="headerlink" title="HelloControllerTest.cs"></a>HelloControllerTest.cs</h2><blockquote><p>[TestFixture]加在一个类上，标识这个类是一个包含自动化NUnit测试的类</p><p>[Test]加在一个方法上，标识这个方法是一个需要调用的自动化测试</p><p>测试方法的命名规范，一般包含三个部分：[被测方法]<em>[场景]</em>[预期行为]</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[<span class="meta">TestFixture</span>]</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HelloControllerTest</span></div><div class="line">&#123;</div><div class="line">    [<span class="meta">Test</span>]</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Hello_isOk_ReturnTrue</span>(<span class="params"></span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="comment">//arrange(配置)</span></div><div class="line">        HelloController controller = <span class="keyword">new</span> HelloController();</div><div class="line">        <span class="comment">//act(操控)</span></div><div class="line">        <span class="keyword">bool</span> result = controller.Hello().Equals(<span class="string">"Hello NUnit"</span>);</div><div class="line">        <span class="comment">//assert(断言)</span></div><div class="line">        Assert.IsTrue(result);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="其他特性"><a href="#其他特性" class="headerlink" title="其他特性"></a>其他特性</h2><blockquote><p>[SetUp]会在每一次运行测试类中的一个测试方法之前都会执行setup方法</p><p>[TearDown]会在测试类中的每一个测试方法运行结束后，执行一次</p><p>[TestFixtureSetUp]运行在一个测试类中的所有测试运行之前设置状态</p><p>[TestFixtureTearDown]在测试运行结束后进行清理</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;NUnit入门&lt;/p&gt;
    
    </summary>
    
      <category term="DotNet" scheme="http://kimisme.com/categories/DotNet/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaScript-Ajax</title>
    <link href="http://kimisme.com/2017/10/14/javascript-ajax/"/>
    <id>http://kimisme.com/2017/10/14/javascript-ajax/</id>
    <published>2017-10-14T06:59:41.000Z</published>
    <updated>2017-10-14T07:10:39.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先Ajax，封装自己的Ajax</p><a id="more"></a><h2 id="Get请求"><a href="#Get请求" class="headerlink" title="Get请求"></a>Get请求</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html xmlns=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</div><div class="line">    &lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></div><div class="line">    &lt;script&gt;</div><div class="line">        <span class="comment">//页面加载完毕后 创建对象</span></div><div class="line">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"btnGet"</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                <span class="comment">//1.创建异步对象（类似小浏览器）</span></div><div class="line">                <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">                <span class="comment">//2.设置参数，第三参数表示是否异步发送</span></div><div class="line">                <span class="comment">//Get请求，请求参数是紧跟url后面</span></div><div class="line">                xhr.open(<span class="string">"Get"</span>, <span class="string">"/Handler.ashx?Name=Kim&amp;&amp;Age=18"</span>, <span class="literal">true</span>);</div><div class="line">                <span class="comment">//get请求会有缓存，让get不从浏览器读缓存</span></div><div class="line">                xhr.setRequestHeader(<span class="string">"If-Modified-Since"</span>, <span class="string">"0"</span>);</div><div class="line">                <span class="comment">//3.设置回调函数</span></div><div class="line">                xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                    <span class="comment">//当完全接收响应报文后 并且 状态码为200</span></div><div class="line">                    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</div><div class="line">                        <span class="comment">//获取响应报文</span></div><div class="line">                        <span class="keyword">var</span> res = xhr.responseText;</div><div class="line">                        alert(res);</div><div class="line">                    &#125;</div><div class="line">                &#125;;</div><div class="line">                <span class="comment">//4.发送异步请求</span></div><div class="line">                <span class="comment">//Get请求没有请求体，则为null</span></div><div class="line">                xhr.send(<span class="literal">null</span>);</div><div class="line">            &#125;;</div><div class="line">        &#125;</div><div class="line">    &lt;<span class="regexp">/script&gt;</span></div><div class="line"><span class="regexp">&lt;/</span>head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">    &lt;input type=<span class="string">"button"</span> id=<span class="string">"btnGet"</span> value=<span class="string">"Get请求方式"</span> /&gt;</div><div class="line">&lt;<span class="regexp">/body&gt;</span></div><div class="line"><span class="regexp">&lt;/</span>html&gt;</div></pre></td></tr></table></figure><h2 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html xmlns=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span>/&gt;</div><div class="line">        &lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></div><div class="line">        &lt;script&gt;</div><div class="line">            <span class="comment">//页面加载完毕后 创建对象</span></div><div class="line">            <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                <span class="comment">//绑定点击事件</span></div><div class="line">                <span class="built_in">document</span>.getElementById(<span class="string">"btnPost"</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                    <span class="comment">//1.创建异步对象（类似一个小浏览器）</span></div><div class="line">                    <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">                    <span class="comment">//2.设置参数，第三个参数表示是否异步发送</span></div><div class="line">                    xhr.open(<span class="string">"Post"</span>, <span class="string">"/Handler.ashx"</span>, <span class="literal">true</span>);</div><div class="line">                    <span class="comment">//设置请求报文体的编码格式，表单得到默认编码</span></div><div class="line">                    xhr.setRequestHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</div><div class="line">                    <span class="comment">//3.设置回调函数</span></div><div class="line">                    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                        <span class="comment">//当完全接收响应报文 并且 响应状态码为200</span></div><div class="line">                        <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</div><div class="line">                            <span class="comment">//获取香型报文</span></div><div class="line">                            <span class="keyword">var</span> res = xhr.responseText;</div><div class="line">                            alert(res);</div><div class="line">                        &#125;</div><div class="line">                    &#125;;</div><div class="line">                    <span class="comment">//直接拼接字符串key=value&amp;&amp;key=value</span></div><div class="line">                    xhr.send(<span class="string">"Name=Kim&amp;&amp;Age=18"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &lt;<span class="regexp">/script&gt;</span></div><div class="line"><span class="regexp">    &lt;/</span>head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;input type=<span class="string">"button"</span> id=<span class="string">"btnPost"</span> value=<span class="string">"Post请求"</span>/&gt;</div><div class="line">    &lt;<span class="regexp">/body&gt;</span></div><div class="line"><span class="regexp">&lt;/</span>html&gt;</div></pre></td></tr></table></figure><h2 id="ajaxHelper-js"><a href="#ajaxHelper-js" class="headerlink" title="ajaxHelper.js"></a>ajaxHelper.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> jsHelper = &#123;</div><div class="line">    <span class="comment">//1.0 浏览器兼容的方式创建异步对象</span></div><div class="line">    makeXHR: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="comment">//声明异步对象变量</span></div><div class="line">        <span class="keyword">var</span> xmlHttp = <span class="literal">false</span>;</div><div class="line">        <span class="comment">//声明 扩展 名</span></div><div class="line">        <span class="keyword">var</span> xmlHttpObj = [<span class="string">"MSXML2.XMLHttp.5.0"</span>, <span class="string">"MSXML2.XMLHttp.4.0"</span>, <span class="string">"MSXML2.XMLHttp.3.0"</span>, <span class="string">"MSXML2.XMLHttp"</span>, <span class="string">"MSXML.XMLHttp"</span>];</div><div class="line">        <span class="comment">//判断浏览器是否支持 XMLHttpRequest，如果支持，则是新式浏览器，可以直接创建</span></div><div class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</div><div class="line">            xmlHttp = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//否则，只能循环 遍历 老式浏览器 异步对象名，一一尝试创建，直到创建成功为止</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</div><div class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; xmlHttpObj.length; i++) &#123;</div><div class="line">                xmlHttp = <span class="keyword">new</span> ActiveXObject(xmlHttpObj[i]);</div><div class="line">                <span class="keyword">if</span> (xmlHttp) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//判断 异步对象 是否创建 成功，如果 成功，则返回异步对象，否则返回false</span></div><div class="line">        <span class="keyword">return</span> xmlHttp ? xmlHttp : <span class="literal">false</span>;</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">//2.0发送Ajax请求</span></div><div class="line">    doAjax: <span class="function"><span class="keyword">function</span>(<span class="params">method, url, data, isAyn, callback</span>) </span>&#123;</div><div class="line">        method = method.toLowerCase();</div><div class="line">        <span class="comment">//2.1创建异步对象</span></div><div class="line">        <span class="keyword">var</span> xhr = <span class="keyword">this</span>.makeXHR();</div><div class="line">        <span class="comment">//2.2设置请求参数</span></div><div class="line">        xhr.open(method, url + (method == <span class="string">"get"</span> ? <span class="string">"?"</span> + data : <span class="string">""</span>), isAyn);</div><div class="line">        <span class="comment">//2.3根据请求的不同方式，在请求头中添加不同的属性</span></div><div class="line">        <span class="keyword">if</span> (method == <span class="string">"get"</span>) &#123;</div><div class="line">            xhr.setRequestHeader(<span class="string">"If-Modified-Since"</span>, <span class="number">0</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            xhr.setRequestHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//2.4设置回调函数</span></div><div class="line">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="comment">//如果接收完毕服务器返回的响应报文</span></div><div class="line">            <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;</div><div class="line">                <span class="comment">//判断状态码是否正常</span></div><div class="line">                <span class="keyword">if</span> (xhr.status == <span class="number">200</span>) &#123;</div><div class="line">                    <span class="comment">//调用回调函数</span></div><div class="line">                    <span class="comment">//异步对象调用回调函数，返回的结果保存到xhr对象中</span></div><div class="line">                    callback(xhr);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        <span class="comment">//2.5发送请求（如果是post，则传参数，否则为null）</span></div><div class="line">        xhr.send(method != <span class="string">"get"</span> ? data : <span class="literal">null</span>);</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">//3.0发送Post请求</span></div><div class="line">    doPost: <span class="function"><span class="keyword">function</span>(<span class="params">url, data, isAyn, callback</span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>.doAjax(<span class="string">"post"</span>, url, data, isAyn, callback);</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">//4.0发送Get 请求</span></div><div class="line">    doGet: <span class="function"><span class="keyword">function</span>(<span class="params">url, data, isAyn, callback</span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>.doAjax(<span class="string">"get"</span>, url, data, isAyn, callback);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p><strong>使用</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"ajaxHelper.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"btnGet"</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">                jsHelper.doGet(<span class="string">"getHandler.ashx"</span>,<span class="string">"Name=Kim"</span>,<span class="literal">true</span>,<span class="function"><span class="keyword">function</span> (<span class="params">resObj</span>)</span>&#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">var</span> res = resObj.responseText;</span></div><div class="line"><span class="undefined">                    alert(res);</span></div><div class="line"><span class="undefined">                &#125;);</span></div><div class="line"><span class="undefined">            &#125;;</span></div><div class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"btnPost"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">                jsHelper.doPost(<span class="string">"postHandler.ashx"</span>, <span class="string">"Age=18"</span>, <span class="literal">true</span>, <span class="function"><span class="keyword">function</span>(<span class="params">resObj</span>) </span>&#123;</span></div><div class="line"><span class="javascript">                    <span class="keyword">var</span> res = resObj.responseText;</span></div><div class="line"><span class="undefined">                    alert(res);</span></div><div class="line"><span class="undefined">                &#125;);</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Get请求"</span> <span class="attr">id</span>=<span class="string">"btnGet"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Post请求"</span> <span class="attr">id</span>=<span class="string">"btnPost"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="Ajax去缓存"><a href="#Ajax去缓存" class="headerlink" title="Ajax去缓存"></a>Ajax去缓存</h2><ol><li>在ajax发送请求前加上anyAjaxObj.setRequestHeader(“If-Modified-Since”,”0”) </li><li>在ajax发送请求前加上anyAjaxObj.SetRequestHeader(“Cache-Control”,”no-cache”) </li><li>在URL后面加上一个随机数：“fresh=”+ Math.random() </li><li>在URL后面加上事件搓：“nowtime=”+ new Date().getTime() </li><li>如果是使用jQuery，直接这样就可以了$.ajaxSetup({cache:false})，全局设置<br>【这样页面的所有ajax都会执行这条语句就不会保存缓存记录】</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;首先Ajax，封装自己的Ajax&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://kimisme.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://kimisme.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>something-about-vs2013</title>
    <link href="http://kimisme.com/2017/10/14/something-about-vs2013/"/>
    <id>http://kimisme.com/2017/10/14/something-about-vs2013/</id>
    <published>2017-10-14T05:13:46.000Z</published>
    <updated>2017-10-14T05:15:54.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>VS2013使用过程的一些问题处理</p><a id="more"></a><h2 id="Web项目启动报403-13错误"><a href="#Web项目启动报403-13错误" class="headerlink" title="Web项目启动报403.13错误"></a>Web项目启动报403.13错误</h2><ul><li>打开文件<code>C:\Users\John\Documents\IISExpress\config</code></li><li>找到节点<code>&lt;directoryBrowse enabled=&quot;false&quot; /&gt;</code></li><li>修改节点<code>&lt;directoryBrowse enabled=&quot;true&quot; /&gt;</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;VS2013使用过程的一些问题处理&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS定位</title>
    <link href="http://kimisme.com/2017/10/14/css-positioning/"/>
    <id>http://kimisme.com/2017/10/14/css-positioning/</id>
    <published>2017-10-14T04:56:50.000Z</published>
    <updated>2017-10-14T05:38:12.079Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>CSS定位</p><h2 id="fixed定位"><a href="#fixed定位" class="headerlink" title="fixed定位"></a>fixed定位</h2><blockquote><ul><li>元素的位置相对于浏览器窗口是固定位置</li><li>在ie7，ie8下需要声明<code>&lt;!DOCTYPE html&gt;</code></li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.pos_fixed &#123;</div><div class="line">    position: fixed;</div><div class="line">    top: 30px;</div><div class="line">    right: 5px;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="relative定位"><a href="#relative定位" class="headerlink" title="relative定位"></a>relative定位</h2><blockquote><ul><li>相对元素正常位置的偏移</li><li>常用来作为绝对定位元素的容器块</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.pos_right &#123;</div><div class="line">    position: relative;</div><div class="line">    left: 10px;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="absolute定位"><a href="#absolute定位" class="headerlink" title="absolute定位"></a>absolute定位</h2><blockquote><p>-相对于最近的已定位的父元素<br>-如果父元素已经用了relative定位，就以父元素的位置进行偏移<br>-如果没有已定位的父元素，那就相对于<html><br>-定位的元素可以与其他元素重叠(z-index:-1)</html></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.pos_right &#123;</div><div class="line">    position: relative;</div><div class="line">    left: 100px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;CSS定位&lt;/p&gt;
&lt;h2 id=&quot;fixed定位&quot;&gt;&lt;a href=&quot;#fixed定位&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>DotNet开发环境</title>
    <link href="http://kimisme.com/2017/10/14/cheat-sheet-dot-net-developer-environment/"/>
    <id>http://kimisme.com/2017/10/14/cheat-sheet-dot-net-developer-environment/</id>
    <published>2017-10-14T03:17:38.000Z</published>
    <updated>2017-10-14T03:46:11.805Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>C#开发环境</p><a id="more"></a><h2 id="开发神器"><a href="#开发神器" class="headerlink" title="开发神器"></a>开发神器</h2><p>安装Visual Studio 2013(我从大学开始就用这个版本，可以用最新的)</p><p>安装Resharper</p><p>配置VS</p><p><img src="http://owrsf98kb.bkt.clouddn.com/20171014001.png" alt=""></p><p>配置VS</p><p><img src="http://owrsf98kb.bkt.clouddn.com/20171014002.png" alt=""></p><p>配置VS</p><p><img src="http://owrsf98kb.bkt.clouddn.com/20171014003.png" alt=""></p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>SqlServer2012</p><h2 id="添加字体"><a href="#添加字体" class="headerlink" title="添加字体"></a>添加字体</h2><p>下载的字体放到<code>C:\Windows\Fonts</code>中</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;C#开发环境&lt;/p&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="http://kimisme.com/categories/CheatSheet/"/>
    
    
      <category term="dotnet" scheme="http://kimisme.com/tags/dotnet/"/>
    
  </entry>
  
  <entry>
    <title>Gradle系列(9)-生命周期</title>
    <link href="http://kimisme.com/2017/09/28/gradle-life-cycle/"/>
    <id>http://kimisme.com/2017/09/28/gradle-life-cycle/</id>
    <published>2017-09-28T12:56:40.000Z</published>
    <updated>2017-09-28T13:21:07.018Z</updated>
    
    <content type="html"><![CDATA[<p>初始化，配置，执行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;初始化，配置，执行&lt;/p&gt;

      
    
    </summary>
    
      <category term="Gradle" scheme="http://kimisme.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://kimisme.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle系列(8)-自定义任务</title>
    <link href="http://kimisme.com/2017/09/28/gradle-custom-task/"/>
    <id>http://kimisme.com/2017/09/28/gradle-custom-task/</id>
    <published>2017-09-28T12:51:59.000Z</published>
    <updated>2017-09-28T12:53:35.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用groovy自定义gradle任务</p><a id="more"></a><h2 id="自动生成java项目结构"><a href="#自动生成java项目结构" class="headerlink" title="自动生成java项目结构"></a>自动生成java项目结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">def createDir = &#123;</div><div class="line">    path -&gt;</div><div class="line">        File dir = <span class="keyword">new</span> File(path);</div><div class="line">        <span class="keyword">if</span>(!dir.exists())&#123;</div><div class="line">            dir.mkdirs();</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">task <span class="title">makeJavaDir</span><span class="params">()</span></span>&#123;</div><div class="line">    def paths = [<span class="string">'src/main/java'</span>,<span class="string">'src/main/resources'</span>,<span class="string">'src/test/java'</span>,<span class="string">'src/test/resources'</span>];</div><div class="line">    doFirst &#123;</div><div class="line">        paths.forEach(createDir);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="自动生成javaWeb项目结构"><a href="#自动生成javaWeb项目结构" class="headerlink" title="自动生成javaWeb项目结构"></a>自动生成javaWeb项目结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function">task <span class="title">makeWebDir</span><span class="params">()</span></span>&#123;</div><div class="line">    dependsOn <span class="string">'makeJavaDir'</span>;</div><div class="line">    def paths = [<span class="string">'src/main/webapp'</span>,<span class="string">'src/test/webapp'</span>];</div><div class="line">    doLast&#123;</div><div class="line">        paths.forEach(createDir);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;使用groovy自定义gradle任务&lt;/p&gt;
    
    </summary>
    
      <category term="Gradle" scheme="http://kimisme.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://kimisme.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle系列(7)-构建脚本</title>
    <link href="http://kimisme.com/2017/09/26/gradle-build-script/"/>
    <id>http://kimisme.com/2017/09/26/gradle-build-script/</id>
    <published>2017-09-26T11:26:11.000Z</published>
    <updated>2017-09-26T14:31:00.824Z</updated>
    
    <content type="html"><![CDATA[<p>##前言</p><a id="more"></a><h2 id="构建块"><a href="#构建块" class="headerlink" title="构建块"></a>构建块</h2><p><img src="http://owrsf98kb.bkt.clouddn.com/20170926001.png" alt=""></p><p>Gradle构建中的两个基本概念是项目(<code>project</code>)和任务(<code>task</code>)，每个构建至少包含一个项目，项目中包含一个或多个任务。在多项目构建中，一个项目可以依赖于其他项目；类似的，任务可以形成一个依赖关系图来确保他们的执行顺序</p><h2 id="项目-project"><a href="#项目-project" class="headerlink" title="项目(project)"></a>项目(project)</h2><p>一个项目代表一个正在构建的组件(比如一个jar文件)，当构建启动后，Gradle会基于build.gradle实例化一个<code>org.gradle.api.Project</code>类，并且能够通过project变量使其隐式可用</p><ul><li>Project的常用属性：group，name，version</li></ul><p><code>group &#39;com.kimisme.gradle&#39;</code>等同于<code>project.group &#39;com.kimisme.gradle&#39;</code></p><ul><li>Project的常用方法：apply，dependencies，repositories，task</li></ul><p><code>apply plugin: &#39;java&#39;</code>等同于<code>project.apply( plugin: &#39;java&#39;)</code></p><ul><li>Project中属性的其他配置方式：ext，gradle.properties</li></ul><h2 id="任务-task"><a href="#任务-task" class="headerlink" title="任务(task)"></a>任务(task)</h2><p>任务对应<code>org.gradle.api.Task</code>。主要包括任务动作和任务依赖。任务动作定义了一个最小的工作单元。可用定义依赖于其他任务、动作序列和执行条件。</p><p><strong>这些都是jar插件自带的task</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170926002.png" alt=""></p><ul><li>task中的常用方法：dependsOn</li><li>task中的常用方法：doFirst，doLast &lt;&lt;</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##前言&lt;/p&gt;
    
    </summary>
    
      <category term="Gradle" scheme="http://kimisme.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://kimisme.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle系列(6)-使用Gradle构建JavaWeb项目</title>
    <link href="http://kimisme.com/2017/09/25/gradle-build-java-web-project/"/>
    <id>http://kimisme.com/2017/09/25/gradle-build-java-web-project/</id>
    <published>2017-09-25T11:56:50.000Z</published>
    <updated>2017-09-25T12:04:08.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用Gradle构建Java项目</p><a id="more"></a><h2 id="脚下留心"><a href="#脚下留心" class="headerlink" title="脚下留心"></a>脚下留心</h2><p><strong>新建项目</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925010.png" alt=""></p><p><strong>Next</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925011.png" alt=""></p><p><strong>Next</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925012.png" alt=""></p><p><strong>Next</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925013.png" alt=""></p><p><strong>这是构建好的项目</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925014.png" alt=""></p><p><strong>File-Project Structure</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925015.png" alt=""></p><p><strong>war打包</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925016.png" alt=""></p><p><strong>运行</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925017.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;使用Gradle构建Java项目&lt;/p&gt;
    
    </summary>
    
      <category term="Gradle" scheme="http://kimisme.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://kimisme.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle系列(5)-使用Gradle构建Java项目</title>
    <link href="http://kimisme.com/2017/09/25/gradle-build-java-project/"/>
    <id>http://kimisme.com/2017/09/25/gradle-build-java-project/</id>
    <published>2017-09-25T11:17:12.000Z</published>
    <updated>2017-09-25T11:34:44.175Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用Gradle构建Java项目</p><a id="more"></a><h2 id="脚下留心"><a href="#脚下留心" class="headerlink" title="脚下留心"></a>脚下留心</h2><p><strong>新建Gradle项目</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925001.png" alt=""></p><p><strong>Next</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925002.png" alt=""></p><p><strong>Next</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925003.png" alt=""></p><p><strong>设置项目路径</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925004.png" alt=""></p><p><strong>设置源代码文件夹</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925005.png" alt=""></p><p><strong>添加包名</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925006.png" alt=""></p><p><strong>编写测试类</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925007.png" alt=""></p><p><strong>选择jar打包</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925008.png" alt=""></p><p><strong>执行jar文件</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170925009.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;使用Gradle构建Java项目&lt;/p&gt;
    
    </summary>
    
      <category term="Gradle" scheme="http://kimisme.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://kimisme.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle系列(3)-Groovy特性</title>
    <link href="http://kimisme.com/2017/09/24/gradle-groovy-grammar/"/>
    <id>http://kimisme.com/2017/09/24/gradle-groovy-grammar/</id>
    <published>2017-09-24T07:16:02.000Z</published>
    <updated>2017-09-24T09:12:10.391Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Groovy特性</p><a id="more"></a><h2 id="Groovy是什么"><a href="#Groovy是什么" class="headerlink" title="Groovy是什么"></a>Groovy是什么</h2><p>Groovy是用于Java虚拟机的一种敏捷的动态语言，它是一种成熟的面向对象编程语言，既可以用于面向对象编程，又可以用作纯粹的脚本语言。使用该语言不必编写过多的代码，同时又具有闭包和动态语言中的其他特性。</p><h2 id="Groovy与Java"><a href="#Groovy与Java" class="headerlink" title="Groovy与Java"></a>Groovy与Java</h2><ul><li>完全兼容Java的语法</li><li>分号是可选的</li><li>类、方法默认是public</li><li>编译器给属性自动添加getter/setter方法</li><li>属性可以直接用点号获取</li><li>最后一个表达式的值会被作为返回值</li><li>==等同于equals()，不会有NullPointerExceptions</li></ul><h2 id="Groovy高效特性"><a href="#Groovy高效特性" class="headerlink" title="Groovy高效特性"></a>Groovy高效特性</h2><ul><li>自带assert语句</li><li>可选类型定义</li><li>可选的括号</li><li>字符串</li><li>集合API</li><li>闭包</li></ul><h2 id="创建Groovy项目"><a href="#创建Groovy项目" class="headerlink" title="创建Groovy项目"></a>创建Groovy项目</h2><p><strong>File-New Project-Gradle</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170924003.png" alt="20170924003"></p><p><strong>Next</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170924004.png" alt="20170924004"></p><p><strong>Next</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170924005.png" alt="20170924005"></p><p><strong>Next</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170924006.png" alt="20170924006"></p><p><strong>Groovy Console</strong></p><p><img src="http://owrsf98kb.bkt.clouddn.com/20170924007.png" alt="20170924007"></p><h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><p><strong>可选类型定义</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">def version = <span class="number">1</span></div></pre></td></tr></table></figure><p><strong>assert</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">assert</span> version == <span class="number">2</span></div></pre></td></tr></table></figure><p><strong>括号是可选的</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">println version</div></pre></td></tr></table></figure><p><strong>字符串</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">def s1 = <span class="string">'kimisme'</span></div><div class="line">def s2 = <span class="string">"gradle version is $&#123;version&#125;"</span></div><div class="line">def s3 = <span class="string">''</span><span class="string">'kim</span></div><div class="line"><span class="string">is</span></div><div class="line"><span class="string">me'</span><span class="string">''</span></div></pre></td></tr></table></figure><p><strong>集合api</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">def buildTools = [<span class="string">'ant'</span>,<span class="string">'maven'</span>]</div><div class="line">buildTools &lt;&lt; <span class="string">'gradle'</span></div><div class="line"><span class="keyword">assert</span> buildTools.getClass() == ArrayList</div><div class="line"><span class="keyword">assert</span> buildTools.size() == <span class="number">3</span></div></pre></td></tr></table></figure><p><strong>map</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">def buildYears = [<span class="string">'ant'</span>:<span class="number">2000</span>,<span class="string">'maven'</span>:<span class="number">2004</span>]</div><div class="line">buildYears.gradle = <span class="number">2009</span></div><div class="line"></div><div class="line">println buildYears.ant</div><div class="line">println buildYears[<span class="string">'gradle'</span>]</div><div class="line">println buildYears.getClass()</div></pre></td></tr></table></figure><p><strong>闭包</strong></p><p>不带参数闭包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">def c1 = &#123;</div><div class="line">    v -&gt;</div><div class="line">        println v</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">def <span class="title">method1</span><span class="params">(Closure closure)</span></span>&#123;</div><div class="line">    closure(<span class="string">'param'</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">method1(c1)</div></pre></td></tr></table></figure><p>带参数闭包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">def c2 = &#123;</div><div class="line">    println <span class="string">'hello'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">def <span class="title">method2</span><span class="params">(Closure  closure)</span></span>&#123;</div><div class="line">    closure()</div><div class="line">&#125;</div><div class="line"></div><div class="line">method2(c2)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Groovy特性&lt;/p&gt;
    
    </summary>
    
      <category term="Gradle" scheme="http://kimisme.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://kimisme.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle系列(2)-安装</title>
    <link href="http://kimisme.com/2017/09/24/gradle-install/"/>
    <id>http://kimisme.com/2017/09/24/gradle-install/</id>
    <published>2017-09-24T06:29:22.000Z</published>
    <updated>2017-09-24T06:43:30.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Gradle安装</p><a id="more"></a><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>Gradle可以允许在所有主要操作系统上，并且需要<code>Java JDK or JRE 7</code>或者更高版本。运行<code>java -version</code>验证。</p><p>从官网<a href="https://gradle.org" target="_blank" rel="external">https://gradle.org`</a>下载Gradle安装包，然后解压到指定目录</p><h2 id="Gradle目录结构"><a href="#Gradle目录结构" class="headerlink" title="Gradle目录结构"></a>Gradle目录结构</h2><ul><li>bin：里面有两个可执行文件，windows下的，和linux下的</li><li>init.d：所有的初始化脚本放到这里，每次执行构建之前都会把这个目录下的所有脚本执行一遍</li><li>lib：gradle本身依赖的一些jar包</li><li>meida：里面是一些图标文件</li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>配置环境变量：Gradle_HOME=C:**\Gradle\gradle-3.3-bin</li><li>添加到Path：%Gradle_HOME\bin%;</li><li>验证是否安装成功：gradle-v</li></ul><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"> ------------------------------------------------------------</div><div class="line">Gradle <span class="number">3</span>.<span class="number">3</span></div><div class="line">------------------------------------------------------------</div><div class="line"></div><div class="line">Build <span class="built_in">time</span>:   <span class="number">2017</span>-<span class="number">01</span>-<span class="number">03</span> <span class="number">15</span>:<span class="number">31</span>:<span class="number">04</span> UTC</div><div class="line"><span class="function">Revision:     075893<span class="title">a3d0798c0c1f322899b41ceca82e4e134b</span></span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function"><span class="title">Groovy</span>:       2.4.7</span></div><div class="line"><span class="function"><span class="title">Ant</span>:          <span class="title">Apache</span> <span class="title">Ant</span>(<span class="title">TM</span>) <span class="title">version</span> 1.9.6 <span class="title">compiled</span> <span class="title">on</span> <span class="title">June</span> 29 2015</span></div><div class="line"><span class="function"><span class="title">JVM</span>:          1.8.0<span class="title">_121</span> (<span class="title">Oracle</span> <span class="title">Corporation</span> 25.121-<span class="title">b13</span>)</span></div><div class="line"><span class="function"><span class="title">OS</span>:           <span class="title">Windows</span> 7 6.1 <span class="title">amd64</span></span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Gradle安装&lt;/p&gt;
    
    </summary>
    
      <category term="Gradle" scheme="http://kimisme.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://kimisme.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle系列(1)-构建工具</title>
    <link href="http://kimisme.com/2017/09/24/gradle-build-tool/"/>
    <id>http://kimisme.com/2017/09/24/gradle-build-tool/</id>
    <published>2017-09-24T05:57:41.000Z</published>
    <updated>2017-09-24T06:11:23.267Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Gradle为我们解决了什么问题</p><a id="more"></a><h2 id="石器时代"><a href="#石器时代" class="headerlink" title="石器时代"></a>石器时代</h2><p><img src="http://owrsf98kb.bkt.clouddn.com/20170924002.png?" alt="20170924002"></p><p>在构建工具出现前，开发一个项目的流程是：将依赖的jar包放到lib目录下；独个运行测试用例；使用Eclipse导出war包，通过ftp上传到服务器，再解压运行</p><h2 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h2><p><img src="http://owrsf98kb.bkt.clouddn.com/20170924001.png" alt="20170924001"></p><p>主流的构建工具主义有三个。最早出现的是Ant，它只提供了编译、测试、打包这三个最基本的功能。随后出现的Maven，在Ant的基础上提供了依赖管理和发布的功能。Gradle在Maven的基础上又进了一步，用Groovy来管理构建脚本，不再使用XML这种标记性语言来构建脚本，因为项目大了容易啰嗦和臃肿，难以管理。而使用特定领域语言来管理脚本，具有更高的灵活性和可扩展性</p><h2 id="Gradle是什么"><a href="#Gradle是什么" class="headerlink" title="Gradle是什么"></a>Gradle是什么</h2><p>一个开源的项目自动化构建工具，建立在Apache Ant和Apache Maven概念的基础上，并引入了基于Groovy的特定领域语言(DSL)，而不是使用XML形式管理构建脚本。</p><h2 id="Gradle能为我们做什么"><a href="#Gradle能为我们做什么" class="headerlink" title="Gradle能为我们做什么"></a>Gradle能为我们做什么</h2><p>它是一个构建工具，就具有构建工具的功能。<br>依赖管理，自动化测试，打包，发布到指定地方</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Gradle为我们解决了什么问题&lt;/p&gt;
    
    </summary>
    
      <category term="Gradle" scheme="http://kimisme.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://kimisme.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Maven系列(7)-pom元素说明</title>
    <link href="http://kimisme.com/2017/09/23/maven-pom-xml/"/>
    <id>http://kimisme.com/2017/09/23/maven-pom-xml/</id>
    <published>2017-09-23T12:06:30.000Z</published>
    <updated>2017-09-23T12:18:48.509Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>介绍pom文件</p><a id="more"></a><h2 id=""><a href="#" class="headerlink" title=""></a><object></object></h2><p>包含了pom的一些约束信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><modelversion></modelversion></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 指定了当前pom的版本，它是必须的 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="-2"><a href="#-2" class="headerlink" title=""></a><groupid></groupid></h2><p>项目创建的包名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.kimisme.app<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="-3"><a href="#-3" class="headerlink" title=""></a><artifactid></artifactid></h2><p>项目名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MavenTest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="-4"><a href="#-4" class="headerlink" title=""></a><version></version></h2><p>版本号：</p><ol><li>shapshot快照</li><li>alpha内侧版本</li><li>beta公测</li><li>Release稳定</li><li>GA正式发布</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="-5"><a href="#-5" class="headerlink" title=""></a><packaging></packaging></h2><p>打包类型：默认jar。<br>其他类型：war，zip，pom</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="其他信息"><a href="#其他信息" class="headerlink" title="其他信息"></a>其他信息</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 项目的描述名；产生项目文档是才使用 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 项目的地址 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span><span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 项目的描述 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 开发人员列表 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">developers</span>&gt;</span><span class="tag">&lt;/<span class="name">developers</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 许可证信息，如用到了一些开源项目 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span><span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 组织信息 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">organization</span>&gt;</span><span class="tag">&lt;/<span class="name">organization</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;介绍pom文件&lt;/p&gt;
    
    </summary>
    
      <category term="Maven" scheme="http://kimisme.com/categories/Maven/"/>
    
    
      <category term="Maven" scheme="http://kimisme.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Maven系列(6)-Maven的生命周期</title>
    <link href="http://kimisme.com/2017/09/23/maven-life-cycle/"/>
    <id>http://kimisme.com/2017/09/23/maven-life-cycle/</id>
    <published>2017-09-23T12:02:39.000Z</published>
    <updated>2017-09-23T12:06:04.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Maven的生命周期</p><a id="more"></a><h2 id="三套生命周期"><a href="#三套生命周期" class="headerlink" title="三套生命周期"></a>三套生命周期</h2><p>Maven拥有三套相互独立的生命周期，它们分别为clean，default，site；<br>每个生命周期包含一些阶段，这些阶段是有顺序的，并且后面的阶段依赖于前面的阶段，用户和Maven最直接的交互方式就是调用这些生命周期阶段；</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Maven的生命周期&lt;/p&gt;
    
    </summary>
    
      <category term="Maven" scheme="http://kimisme.com/categories/Maven/"/>
    
    
      <category term="Maven" scheme="http://kimisme.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Maven系列(5)-Eclipse集成</title>
    <link href="http://kimisme.com/2017/09/23/maven-ide-integration/"/>
    <id>http://kimisme.com/2017/09/23/maven-ide-integration/</id>
    <published>2017-09-23T11:31:11.000Z</published>
    <updated>2017-09-23T12:00:10.549Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Maven与Eclipse的集成</p><a id="more"></a><blockquote><p>M2Eclipse is the official Eclipse project for Maven integration for the Eclipse IDE.</p></blockquote><h2 id="M2Eclipse-特性"><a href="#M2Eclipse-特性" class="headerlink" title="M2Eclipse 特性"></a>M2Eclipse 特性</h2><ul><li>Launching Maven builds from within Eclipse</li><li>Dependency management for Eclipse build path based on Maven’s pom.xml</li><li>Resolving Maven dependencies from the Eclipse workspace without installing to local Maven repository</li><li>Automatic downloading of the required dependencies and sources from the remote Maven repositories</li><li>Wizards for creating new Maven projects, pom.xml and to enable Maven support on existing projects</li><li>Quick search for dependencies in remote Maven repositories</li><li>Quick fixes in the Java editor for looking up required dependencies/jars by the class or package name</li><li>Integration with other Eclipse tools, such as WTP, AJDT, Mylyn, Subclipse and others.</li></ul><p>M2E dynamically integrates with your Maven projects with Eclipse while you make changes in the IDE. As you change dependencies, or configurations of Maven plugins in your POMs M2E, will synchronize the Eclipse workspace with those changes.</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>从<code>Eclipse Marketplace</code>中搜索<code>maven</code></p><p><img src="" alt=""></p><h2 id="Maven配置"><a href="#Maven配置" class="headerlink" title="Maven配置"></a>Maven配置</h2><p><strong>Maven路径配置</strong></p><p><img src="" alt=""></p><p><strong>Maven用户配置</strong></p><p><strong>Maven下载配置</strong></p><h2 id="创建Maven项目"><a href="#创建Maven项目" class="headerlink" title="创建Maven项目"></a>创建Maven项目</h2><p><strong>添加Maven项目</strong></p><p><strong>Next</strong></p><p><strong>选择maven-archetype-quickstart</strong></p><p><strong>添加坐标信息</strong></p><p><strong>项目截图</strong></p><h2 id="Maven项目导出"><a href="#Maven项目导出" class="headerlink" title="Maven项目导出"></a>Maven项目导出</h2><h2 id="Maven项目导入"><a href="#Maven项目导入" class="headerlink" title="Maven项目导入"></a>Maven项目导入</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Maven与Eclipse的集成&lt;/p&gt;
    
    </summary>
    
      <category term="Maven" scheme="http://kimisme.com/categories/Maven/"/>
    
    
      <category term="Maven" scheme="http://kimisme.com/tags/Maven/"/>
    
  </entry>
  
</feed>
